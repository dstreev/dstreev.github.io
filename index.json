[{"authors":["dstreev"],"categories":null,"content":"A veteran Big Data evangelist, David leads a team at Cloudera that helps customers leverage Big Data and Streaming Technologies in the most effective ways. Deeply technical with 30 years of application development, systems design, and operational experience across Finance, Manufacturing, Transportation and, Healthcare. David has worked with 300+ Cloudera / Legacy Hortonworks customers over the last six years, helping them solve tough technical challenges across the Cloudera platforms.\nWorking through challenges and feature requests from clients, David helps identify patterns/solutions then works with Product and Engineering teams to guide the strategic direction of Cloudera engineering efforts including our Hybrid Cloud initiatives.\nAs these platforms mature, techniques change and evolve, David works with strategic customers to help them understand ways to leverage those performance and feature enhancements.\nMigrating or upgrading from previous platform releases? Knowing what to look for can save you a lot of work. David has been helping / advising customers on the upgrade path to make this transitions as easy as possible.\n","date":1571270400,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1571270400,"objectID":"8f3edd0d89dd111ac82738abfa1b089c","permalink":"http://blog.streever.com/authors/dstreev/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/dstreev/","section":"authors","summary":"A veteran Big Data evangelist, David leads a team at Cloudera that helps customers leverage Big Data and Streaming Technologies in the most effective ways. Deeply technical with 30 years of application development, systems design, and operational experience across Finance, Manufacturing, Transportation and, Healthcare. David has worked with 300+ Cloudera / Legacy Hortonworks customers over the last six years, helping them solve tough technical challenges across the Cloudera platforms.\nWorking through challenges and feature requests from clients, David helps identify patterns/solutions then works with Product and Engineering teams to guide the strategic direction of Cloudera engineering efforts including our Hybrid Cloud initiatives.","tags":null,"title":"David W. Streever","type":"authors"},{"authors":["David W. Streever"],"categories":["devops","navigation"],"content":"Working with Hadoop is much like working with a terminal application, as most everything you do with Hadoop is via the terminal. If you want to launch a MapReduce job, do it from the terminal. If you wanted to explore HDFS, run a command from the terminal.\nWorking with the Hadoop Distributed File System (HDFS) should be like working with any other file system, at least when you\u0026rsquo;re in the terminal. Unfortunately, it\u0026rsquo;s not.\nTo do anything with HDFS, launch the command line application hdfs. hdfs has several sub-applications for controlling various interactions with \u0026lsquo;HDFS\u0026rsquo;. My focus is to make the dfs sub-application more amenable for \u0026lsquo;any\u0026rsquo; user. Running hdfs dfs -... for every query isn\u0026rsquo;t the experience that leaves you wanting more. And honestly, that\u0026rsquo;s been one of Hadoop\u0026rsquo;s issues with user acceptance. It\u0026rsquo;s an expert system, and every native interface reinforces that 10 fold.\nSo there you have it, we\u0026rsquo;ve got a gap. We should be able to interact with \u0026lsquo;HDFS\u0026rsquo; the same way we interact with the file system on our local computer.\nFive years ago, I discovered the fledgling \u0026lsquo;first\u0026rsquo; iteration of this program written by Taylor Goetz, Apache Storm PMC Chair. The concept was great but needed some TLC. So I forked it and have been building and improving it ever since.\nFinally, at least from a terminal perspective, you have the same type of interaction model with HDFS that you have with your local file system.\nAnd it\u0026rsquo;s not just for basic commands. Many of the standard HDFS command-line tools are embedded right in the interface. I\u0026rsquo;ve added scripting, Standard IN, some new commands, and sessions that are context-aware.\nCheck out the slides at the top of this post for a brief intro tour.\n","date":1571270400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1571270400,"objectID":"33c4207f9dab912a8c0f0e85e9ce9850","permalink":"http://blog.streever.com/post/hadoop-cli/intro/","publishdate":"2019-10-17T00:00:00Z","relpermalink":"/post/hadoop-cli/intro/","section":"post","summary":"An introduction to Hadoop CLI.  Installation and basic usage of the 'Missing HDFS CLI'","tags":["hdfs","tooling","hadoop-cli","cli"],"title":"Hadoop CLI - Intro","type":"post"},{"authors":null,"categories":["devops"],"content":"","date":1571270400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1571270400,"objectID":"28fb6d08ed7aef57fd516b2cf4324637","permalink":"http://blog.streever.com/project/hwx-ansible/","publishdate":"2019-10-17T00:00:00Z","relpermalink":"/project/hwx-ansible/","section":"project","summary":"My assortment of Ansible Scripts used to build and control my Hadoop Cluster","tags":["ansible","hadoop","automation"],"title":"HWX Ansible","type":"project"},{"authors":["David W. Streever"],"categories":["devops"],"content":" From Beeline or a standard JDBC client connected to Hive, compactions can be seen with the standard SQL:\nSHOW COMPACTIONS;  But this method has a couple of problems:\n No Filtering Timestamps are hard to interpret  Until additional functionality is available for this built in function, we can do the following.\nAdd links to the Metastore DB tables and create custom views to review compaction details. See The Power of Hive JDBC Federation\nBuild Out Metadata Elements  A word of caution here. All the \u0026lsquo;extras\u0026rsquo; you create against the metastore DB can/may break with the next release. This isn\u0026rsquo;t a supported method of accessing metadata.\nDon\u0026rsquo;t add new tables to the current sys.db. That\u0026rsquo;s bad form and could cause issues for the platform during the next upgrade cycle, especially if there are naming conflicts. Put it somewhere else!!\n  CREATE DATABASE IF NOT EXISTS custom_sys; DROP TABLE IF EXISTS `custom_sys`.`completed_compactions`; DROP TABLE IF EXISTS `custom_sys`.`compaction_queue`; CREATE EXTERNAL TABLE `custom_sys`.`completed_compactions`( CC_ID bigint COMMENT 'from deserializer', CC_DATABASE string COMMENT 'from deserializer', CC_TABLE string COMMENT 'from deserializer', CC_PARTITION string COMMENT 'from deserializer', CC_STATE string COMMENT 'from deserializer', CC_TYPE string COMMENT 'from deserializer', CC_TBLPROPERTIES string COMMENT 'from deserializer', CC_WORKER_ID string COMMENT 'from deserializer', CC_START bigint COMMENT 'from deserializer', CC_END bigint COMMENT 'from deserializer', CC_RUN_AS string COMMENT 'from deserializer', CC_HIGHEST_WRITE_ID bigint COMMENT 'from deserializer', CC_META_INFO string COMMENT 'from deserializer', CC_HADOOP_JOB_ID string COMMENT 'from deserializer' ) ROW FORMAT SERDE 'org.apache.hive.storage.jdbc.JdbcSerDe' STORED BY 'org.apache.hive.storage.jdbc.JdbcStorageHandler' WITH SERDEPROPERTIES ( 'serialization.format'='1') TBLPROPERTIES ( 'bucketing_version'='2', 'hive.sql.database.type'='METASTORE', 'hive.sql.query'='SELECT CC_ID, CC_DATABASE, CC_TABLE, CC_PARTITION, CC_STATE, CC_TYPE, CC_TBLPROPERTIES, CC_WORKER_ID, CC_START, CC_END, CC_RUN_AS, CC_HIGHEST_WRITE_ID, CC_META_INFO, CC_HADOOP_JOB_ID FROM COMPLETED_COMPACTIONS'); CREATE EXTERNAL TABLE `custom_sys`.`compaction_queue`( CQ_ID bigint COMMENT 'from deserializer', CQ_DATABASE string COMMENT 'from deserializer', CQ_TABLE string COMMENT 'from deserializer', CQ_PARTITION string COMMENT 'from deserializer', CQ_STATE string COMMENT 'from deserializer', CQ_TYPE string COMMENT 'from deserializer', CQ_TBLPROPERTIES string COMMENT 'from deserializer', CQ_WORKER_ID string COMMENT 'from deserializer', CQ_START bigint COMMENT 'from deserializer', CQ_RUN_AS string COMMENT 'from deserializer', CQ_HIGHEST_WRITE_ID bigint COMMENT 'from deserializer', CQ_META_INFO string COMMENT 'from deserializer', CQ_HADOOP_JOB_ID string COMMENT 'from deserializer' ) ROW FORMAT SERDE 'org.apache.hive.storage.jdbc.JdbcSerDe' STORED BY 'org.apache.hive.storage.jdbc.JdbcStorageHandler' WITH SERDEPROPERTIES ( 'serialization.format'='1') TBLPROPERTIES ( 'bucketing_version'='2', 'hive.sql.database.type'='METASTORE', 'hive.sql.query'='SELECT CQ_ID, CQ_DATABASE, CQ_TABLE, CQ_PARTITION, CQ_STATE, CQ_TYPE, CQ_TBLPROPERTIES, CQ_WORKER_ID, CQ_START, CQ_RUN_AS, CQ_HIGHEST_WRITE_ID, CQ_META_INFO, CQ_HADOOP_JOB_ID FROM COMPACTION_QUEUE'); DROP VIEW IF EXISTS `custom_sys`.`compactions`; -- TODO: Handle / Show Aborted Transactions (maybe) I think txn data may be transient... CREATE VIEW IF NOT EXISTS `custom_sys`.`compactions` AS SELECT CC_ID AS id, CC_DATABASE AS `database`, CC_TABLE AS `table`, CC_PARTITION AS `partition`, CASE CC_STATE WHEN 's' THEN 'SUCCEEDED' WHEN 'a' THEN 'ATTEMPTED' WHEN 'f' THEN 'FAILED' END AS STATE, CASE CC_TYPE WHEN 'a' THEN 'MAJOR' WHEN 'i' THEN 'MINOR' END AS TYPE, CC_TBLPROPERTIES AS tblproperties, CC_WORKER_ID AS worker_id, to_utc_timestamp(CC_START,'UTC') AS `start`, to_utc_timestamp(CC_END, 'UTC') AS `end`, CC_RUN_AS AS run_as, CC_HIGHEST_WRITE_ID AS highest_write_id, CC_META_INFO AS meta_info, CC_HADOOP_JOB_ID AS hadoop_job_id FROM `custom_sys`.`completed_compactions` UNION ALL SELECT CQ_ID AS id, CQ_DATABASE AS `database`, CQ_TABLE AS `table`, CQ_PARTITION AS `partition`, CASE CQ_STATE WHEN 'i' THEN 'INITIATED' WHEN 'w' THEN 'WORKING' WHEN 'r' THEN 'READY_FOR_CLEANING' END AS `state`, CASE CQ_TYPE WHEN 'a' THEN 'MAJOR' WHEN 'i' THEN 'MINOR' END AS `type`, CQ_TBLPROPERTIES AS tblproperties, CQ_WORKER_ID AS worker_id, to_utc_timestamp(CQ_START, 'UTC') AS `start`, NULL AS `end`, CQ_RUN_AS AS run_as, CQ_HIGHEST_WRITE_ID AS highest_write_id, CQ_META_INFO AS meta_info, CQ_HADOOP_JOB_ID AS hadoop_job_id FROM `custom_sys`.`compaction_queue`;  See the last 10 compaction events select `database`, `table`, `partition`, `state`, `type`, `start`, `end`, hadoop_job_id FROM `custom_sys`.`compactions` ORDER BY `start` DESC LIMIT 10;  Show the last 10 failed compaction event -- `state` options are 'SUCCEEDED', 'ATTEMPTED', 'FAILED', 'INITIATED', 'WORKING', and 'READY_FOR_CLEANING' -- `type` options are 'MAJOR' and 'MINOR' select `database`, `table`, `partition`, `state`, `type`, `start`, `end` FROM `custom_sys`.`compactions` WHERE `state` = 'FAILED' ORDER BY `start` DESC LIMIT 10;  ","date":1571097600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1571097600,"objectID":"bdf9e8a516b4785922a38b6587a93bbe","permalink":"http://blog.streever.com/post/2019/filter-hive-compactions/","publishdate":"2019-10-15T00:00:00Z","relpermalink":"/post/2019/filter-hive-compactions/","section":"post","summary":"Monitoring Hive Compactions is hard with the current tooling.  Find out how to manage this better.","tags":["hive","compaction","jdbc-federation","sys.db","hive-admin","tooling"],"title":"Filter Hive Compactions","type":"post"},{"authors":null,"categories":["big data","devops","navigation"],"content":"","date":1571097600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1571097600,"objectID":"2bb368df24650a5be2b1d60221acf061","permalink":"http://blog.streever.com/project/hadoop-cli/","publishdate":"2019-10-15T00:00:00Z","relpermalink":"/project/hadoop-cli/","section":"project","summary":"The Hadoop CLI is an interactive, scriptable, and state aware HDFS client.","tags":["hdfs","hadoop","interactive","hadoop-cli"],"title":"Hadoop CLI","type":"project"},{"authors":null,"categories":["upgrade","planning"],"content":"","date":1571097600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1571097600,"objectID":"5d5c64187eb7961deac500addb2bad8a","permalink":"http://blog.streever.com/project/hdp3-upgrade-planning/","publishdate":"2019-10-15T00:00:00Z","relpermalink":"/project/hdp3-upgrade-planning/","section":"project","summary":"HDP3 / Hive3 Upgrade Planning Utilities and Reporting.","tags":["hive","hadoop","tooling"],"title":"HDP3 Upgrade Planning","type":"project"},{"authors":null,"categories":["planning","devops"],"content":"","date":1571097600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1571097600,"objectID":"b3754ffd16b33b8a12e709380536c37c","permalink":"http://blog.streever.com/project/hive-llap-calculator/","publishdate":"2019-10-15T00:00:00Z","relpermalink":"/project/hive-llap-calculator/","section":"project","summary":"A Hive LLAP Calculator. Integrates with Ambari to pull and configure an environment.","tags":["hive","llap","calculator"],"title":"Hive LLAP Calculator","type":"project"},{"authors":["David W. Streever"],"categories":["devops","analytics"],"content":" Hive jdbc-federation is a powerful mechanism to include external sources in your hive ecosystem. Apache Software Foundation has excellent docs detailing this feature referred to as the JDBCStorageHandler .\nInteresting points about this StorageHandler include:\n Securing Passwords - Protects passwords using a \u0026lsquo;jceks\u0026rsquo; file stored on \u0026lsquo;hdfs\u0026rsquo; Partitioning - Could be used as an alternate to SQOOP for importing data to Hive  More Hive Metadata! Hive Metadata, previously only available via WebHCat which has been removed, can be retrieved through hive\u0026rsquo;s sys database. And the sys db is actually using the JDBCStorageHandler with a special tblproperty 'hive.sql.database.type'='METASTORE' used with the storage handler and 'hive.sql.query'='SELECT ... FROM ...'.\nI\u0026rsquo;ve used this technique to expose tables that support COMPACTION, LOCKS, and TRANSACTIONS in order to fill some gaps with the current admin functions. See the examples below for details.\n A word of caution here. All the \u0026lsquo;extras\u0026rsquo; you create against the metastore DB can/may break with the next release. This isn\u0026rsquo;t a supported method of accessing metadata.\nDon\u0026rsquo;t add new tables to the current sys.db. That\u0026rsquo;s bad form and could cause issues for the platform during the next upgrade cycle, especially if there are naming conflicts. Put it somewhere else!!\n  ","date":1571097600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1571097600,"objectID":"f96b256b4252cb1df271973003203901","permalink":"http://blog.streever.com/post/2019/jdbc-federation/","publishdate":"2019-10-15T00:00:00Z","relpermalink":"/post/2019/jdbc-federation/","section":"post","summary":"Hive jdbc-federation is a powerful mechanism to include external sources in your hive ecosystem. Apache Software Foundation has excellent docs detailing this feature referred to as the JDBCStorageHandler .\nInteresting points about this StorageHandler include:\n Securing Passwords - Protects passwords using a \u0026lsquo;jceks\u0026rsquo; file stored on \u0026lsquo;hdfs\u0026rsquo; Partitioning - Could be used as an alternate to SQOOP for importing data to Hive  More Hive Metadata! Hive Metadata, previously only available via WebHCat which has been removed, can be retrieved through hive\u0026rsquo;s sys database.","tags":["hive","metastore","jdbc-federation","tooling","enhanced","gaps","wip"],"title":"The Power of Hive JDBC Federation","type":"post"},{"authors":["David W. Streever"],"categories":["devops","navigation"],"content":" The Hadoop CLI A quick tour of the installation and basic usage.\nSlide Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt(Option) + Click  What is the Hadoop-CLI? It is the missing CLI for HDFS.\nLaunch a session and benefit from an interactive CLI experience (like your local filesyste) against HDFS.\nIt does \u0026lsquo;tab\u0026rsquo; completion, has location \u0026lsquo;context\u0026rsquo;, supports \u0026lsquo;most\u0026rsquo; hdfs commands, and has a few \u0026lsquo;nice surprises\u0026rsquo;.\nWhere to Find it On Github\nPre-built Releases\nInstallation  Download the latest tar.gz from Releases  See the \u0026lsquo;Assets\u0026rsquo; associated with a release and downland.  Run the installation as root or sudo to allow it to create and install global links.\nwget \u0026lt;release-link-from-asset-section\u0026gt; tar xvfz hadoop.cli-\u0026lt;version\u0026gt;-3.1.tar.gz cd hadoop-cli-3.1 sudo ./setup.sh   That\u0026rsquo;s it. I\u0026rsquo;m making an assumption you have java 8 on the host.\nStart-up cd # to return to your home directory hadoopcli # It will be in the global path for most standard configurations  Let\u0026rsquo;s try a simple command ls  Notice how way didn\u0026rsquo;t specify a full path (or any path) for ls\nAnd with a \u0026lsquo;relative\u0026rsquo; reference du -h data  The path for du -h is relative (no preceeding \u0026lsquo;/\u0026rsquo;)\nContext Aware Both HDFS and the Local Filesystem are accessible. HDFS is considered the primary, meaning that standard commands will be applied to it.\nContext is tracked for each file system, so commands without a preceeding \u0026lsquo;/\u0026rsquo; will append to the current location.\nNeed Help Get a complete command reference with:\nhelp  Get command help with:\nhelp \u0026lt;command\u0026gt;  Environment Details  This is a valid HDFS client, using Hadoop-HDFS libraries. All permissions are applied to the user as if they were using hdfs dfs -\u0026lt;cmd\u0026gt; ... By default, the application will look for configurations in /etc/hadoop/conf. It requires hdfs-site.xml and core-site.xml from your cluster. Security is applied the same way as if using hdfs dfs. Via \u0026lsquo;os username\u0026rsquo; or \u0026lsquo;kerberos\u0026rsquo;. Get a Kerberos ticket before starting the cli.  Environment Details (cont.)  Support for alternative configs(location) via commandline parameter\nhadoopcli --config \u0026lt;alt-location\u0026gt;   Feedback I\u0026rsquo;m always looking for feedback to make it better.  If you find an issue, log it on my project issues page\n If you think of an enhancement, please log it on my project issues page as well.\n  ","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"e961526ec346faa601918935afac4533","permalink":"http://blog.streever.com/slides/hadoop-cli/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/hadoop-cli/","section":"slides","summary":"An introduction to using Hadoop CLI.","tags":["hdfs","hadoop-cli","tooling"],"title":"Hadoop CLI Walk-Through","type":"slides"},{"authors":["David W. Streever"],"categories":["opinion"],"content":"It happens to everyone, regardless of how long you\u0026rsquo;ve been around. No matter your experience level, there is no escaping the \u0026lsquo;Dunning-Kruger Effect\u0026rsquo;\nLearning a new technology can be rewarding, but you have to push through the \u0026lsquo;valley of despair\u0026rsquo; first. I\u0026rsquo;ve been around a while and a few times a year, I have to go through this. And the process is painful. Not only for me, but those around me as well. They could just rename the effect, \u0026ldquo;The Grumpy Effect\u0026rdquo;.\nIn the beginning, there\u0026rsquo;s a sense of understanding. You feel enlighten by the concepts and totally start to understand the benefits of the new venture, but this is short lived. The next step is actually putting this new knowledge to work. Now you need to roll up your sleeves and actually do it. That\u0026rsquo;s when the confidence you\u0026rsquo;ve just built up, start to crash down. At the height of this confidence, you\u0026rsquo;re king of the world. And soon there after, your less than the dirt on the bottom of your shoe.\nAs you wade through the valley, everything appears foreign and distant. The most simple concept seems to elude your every attempt at understanding. You\u0026rsquo;ll reread a passage numerous times without so much as a hint at it\u0026rsquo;s meaning or relevance.\nAnd then it happens, the swamp starts to drain, the fog lifts and the pieces just start to fall into place. It can take hours, days or maybe months but it will happen. That is, if you can handle the \u0026lsquo;valley\u0026rsquo;.\nAfter 30 years in this business, I found the number 1 asset is \u0026lsquo;persistence\u0026rsquo;. You\u0026rsquo;ll never succeed if you give up! PRESS ON!!!\n","date":1533859200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1533859200,"objectID":"e9c69fc4a8b0231b38678ba0bd4c83e5","permalink":"http://blog.streever.com/post/2018/dunning-kruger-effect-technology/","publishdate":"2018-08-10T00:00:00Z","relpermalink":"/post/2018/dunning-kruger-effect-technology/","section":"post","summary":"If you've been around tech for any amount of time, you've experienced this.  Gleeful understanding and empowerment, followed by despair and self loathing as you get you hands dirty.","tags":["philosophy","tech","knowledge","despair"],"title":"Learning Tech - The Dunning-Kruger Effect","type":"post"},{"authors":null,"categories":null,"content":" Disclaimer This disclaimer (\u0026ldquo;Disclaimer\u0026rdquo;, \u0026ldquo;Agreement\u0026rdquo;) is an agreement between Website Operator (\u0026ldquo;Website Operator\u0026rdquo;, \u0026ldquo;us\u0026rdquo;, \u0026ldquo;we\u0026rdquo; or \u0026ldquo;our\u0026rdquo;) and you (\u0026ldquo;User\u0026rdquo;, \u0026ldquo;you\u0026rdquo; or \u0026ldquo;your\u0026rdquo;). This Disclaimer sets forth the general guidelines, terms and conditions of your use of the blog.streever.com website and any of its products or services (collectively, \u0026ldquo;Website\u0026rdquo; or \u0026ldquo;Services\u0026rdquo;).\nRepresentation Any views or opinions represented in this Website are personal and belong solely to Website Operator and do not represent those of people, institutions or organizations that the owner may or may not be associated with in professional or personal capacity unless explicitly stated. Any views or opinions are not intended to malign any religion, ethnic group, club, organization, company, or individual.\nContent and postings You may print a copy of any part of this Website for your personal or non-commercial use.\nIndemnification and warranties While we have made every attempt to ensure that the information contained on the Website is correct, Website Operator is not responsible for any errors or omissions, or for the results obtained from the use of this information. All information on the Website is provided \u0026ldquo;as is\u0026rdquo;, with no guarantee of completeness, accuracy, timeliness or of the results obtained from the use of this information, and without warranty of any kind, express or implied. In no event will Website Operator be liable to you or anyone else for any decision made or action taken in reliance on the information on the Website or for any consequential, special or similar damages, even if advised of the possibility of such damages. Information on the Website is for general information purposes only and is not intended to provide legal, financial, medical, or any other type of professional advice. Please seek professional assistance should you require it. Furthermore, information contained on the Website and any pages linked to and from it are subject to change at any time and without warning.\nWe reserve the right to modify this Disclaimer relating to the Website or Services at any time, effective upon posting of an updated version of this Disclaimer on the Website. When we do we will post a notification on the main page of our Website. Continued use of the Website after any such changes shall constitute your consent to such changes. Policy was created with WebsitePolicies.\nAcceptance of this disclaimer You acknowledge that you have read this Disclaimer and agree to all its terms and conditions. By accessing the Website you agree to be bound by this Disclaimer. If you do not agree to abide by the terms of this Disclaimer, you are not authorized to use or access the Website.\nContacting us If you would like to contact us to understand more about this Disclaimer or wish to contact us concerning any matter relating to it, you may send an email to david+terms@streever.com\nThis document was last updated on October 18, 2019\n","date":1530140400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1530140400,"objectID":"9b10c1f64082d3869fd4cb1f85809430","permalink":"http://blog.streever.com/terms/","publishdate":"2018-06-28T00:00:00+01:00","relpermalink":"/terms/","section":"","summary":"Disclaimer This disclaimer (\u0026ldquo;Disclaimer\u0026rdquo;, \u0026ldquo;Agreement\u0026rdquo;) is an agreement between Website Operator (\u0026ldquo;Website Operator\u0026rdquo;, \u0026ldquo;us\u0026rdquo;, \u0026ldquo;we\u0026rdquo; or \u0026ldquo;our\u0026rdquo;) and you (\u0026ldquo;User\u0026rdquo;, \u0026ldquo;you\u0026rdquo; or \u0026ldquo;your\u0026rdquo;). This Disclaimer sets forth the general guidelines, terms and conditions of your use of the blog.streever.com website and any of its products or services (collectively, \u0026ldquo;Website\u0026rdquo; or \u0026ldquo;Services\u0026rdquo;).\nRepresentation Any views or opinions represented in this Website are personal and belong solely to Website Operator and do not represent those of people, institutions or organizations that the owner may or may not be associated with in professional or personal capacity unless explicitly stated.","tags":null,"title":"Terms","type":"page"},{"authors":["David W. Streever"],"categories":["upgrade"],"content":" If you are an RHEL/CentOS shop, version 7 should be your target OS for Hadoop. But if you\u0026rsquo;re cluster has been around a while, you probably have a few machines on version 6.x.\nUnfortunately, RHEL / CentOS don\u0026rsquo;t offer an upgrade path from 6 to 7. The only certified option is to wipe the OS and reinstall, which is a problem when it\u0026rsquo;s part of an active cluster.\nThere are 3 methods for dealing with this. - Decommission the node and replace it. - Migrate the workloads to another cluster and rebuild. - Hot swap the OS.\nDecommission Method Decommissioning is a process which gracefully migrates data off a data node in a controlled manner. Thereby removing the data node from the active cluster while ensuring the integrity of the data is maintained.\nThis approach is pretty conservative and general only practically for a small number of nodes.\nWith replication set to 3, the default, you can only decommission two nodes at a time. Beyond that, you risk data being unavailable for a period. See It\u0026rsquo;s your last block.\nWith rack awareness, it\u0026rsquo;s possible to do this a rack at a time. But beware, if rack awareness wasn\u0026rsquo;t initially configured, you can experience data loss/availability issues. Always monitor the namenode for data availability issues.\nWhile the safest approach, there are three major concerns. - Network Bandwidth - This process will force the movement of a dataset equivalent to the used hdfs storage on the device. - Pressure on the Namenode - Namenode resources are required to manage the movement/tracking of blocks left under replicated by the decommissioning process. - Time - This is a lengthy process.\nFor large clusters with hundreds of nodes, it\u0026rsquo;s unlikely you\u0026rsquo;ll be able to keep up a pace needed to replace each node within a reasonable window.\nMigration Depending on how much hardware you have around for this process, it\u0026rsquo;s not a likely option. If you happen to have an abundance of hardware around, you could migrate workloads from one cluster to another, over time.\nThe difficulties with this approach: - Requires a duplicate set of hardware - SLDC processes for an application that are using/ingesting and building the data need to be altered. - Consumers needs to adjust so they can use the new cluster. - Transitions in Big Data are not \u0026ldquo;atomic\u0026rdquo;. The volume ingested and changed on the source is usually too high to be synchronized atomically. Further leading to risk.\nHot swapping the OS Sounds sexy, doesn\u0026rsquo;t it? Well, in geek-speak it kind of is. If you\u0026rsquo;re familiar with how Hadoop manages its filesystem, you know there are three things you need to preserve: fsimage, edits and block pools. When it comes down to it, if these things are safe, you can restore HDFS.\nTo hot swap the OS, you need to have followed some best practices around component/data layouts on your hardware. The first and most important part is that the data directories for the Namenodes, Journal Nodes and Data Nodes should be on physically separate devices from the OS. These drives should NOT be part of any LVM controlled by the OS. They should be simple JBOD devices, formatted as either ext4 or xfs drives.\nAs for the remaining services on your cluster, ensure that all the persisted data elements of each service aren\u0026rsquo;t co-located with the OS drive partition. Which includes (but not limited to): Zeppelin Notebooks, AMS, ATS, Application Data, NFS, etc.. Check for specific OS level customizations like CRONTAB, fstab, etc. on hosts and be prepared to reinstate those after rebuilding the OS.\nTo run this process against your master nodes and continue to support operations in your cluster, the master services for HDFS, YARN, HBase, Oozie, Druid, and Hive should be configured with HA.\nThe cluster metadata stores for Ambari, Hive, Oozie, Ranger, and Druid should be on separately managed RDBMS host(s) and aren\u0026rsquo;t a part of the OS upgrade process we\u0026rsquo;ll cover here.\nIf the above isn\u0026rsquo;t true, you\u0026rsquo;ll need to make it accurate before you can continue with this upgrade method.\nThis process relies on fast and consistent OS (re)builds. For that, I suggest that you invest some time in DevOps automation in the form of Ansible, Puppet, Chef or some other provisioning toolset. You need to be able to rebuild and host and have it ready to be added back to the cluster in under 15 minutes. That may be aggressive, but consider what happens when a data node is marked \u0026lsquo;dead\u0026rsquo;, which will occur after 10 minutes. A lot of traffic and resources will start to be consumed, attempting to repair the missing replicas in the system left by the missing block pool that was managed by the host you\u0026rsquo;re upgrading. So our goal is to reduce the amount of time that the block pool on the host is out of the cluster.\nSome considerations before shutting the host down: - If you want to manage YARN gracefully, you can decommission yarn through Ambari. - We will NOT \u0026lsquo;decommission\u0026rsquo; the Data Node. - If this is a Master with an Active Component, fail it over to the other server before starting this process. This provides you with a bit more control over the process.\nWith the chosen host, go ahead and shut it down. And start the OS migration process.\nAs I mentioned earlier, all persisted state information needs to be on a different physical drive(s) than the OS. The reason for this is that we\u0026rsquo;re going to rebuild the OS partition completely. This means formatting ONLY THE ROOT DEVICE and reinstalling the new OS on it. As long as the persisted stores are on other devices, our data is safe.\nThe process for rebuilding the OS should include all major pre-requisites for a Hadoop cluster, but not limited to this list: - THP (Transparent Huge Pages) disabled - NNTP installed and active - IDM integration (sssd or other) - JDK 8 - latest version installed - OS Patches applied - SELinux - disabled - Swappiness=1 for worker nodes\nConsult the Hortonworks documentation for further details.\nIt is CRITICAL that the host retains the same FQDN as before the upgrade. If this changes, we will NOT be able to use Ambari to complete the process. The hosts \u0026lsquo;fstab\u0026rsquo; configuration should match what was previously configured, regarding the data drives. Don\u0026rsquo;t change mount points at this time, it will only complicate the process and setup.\nIn addition to these, you\u0026rsquo;ll need to install the Ambari-Agent on the host and configure it for the Ambari-Server.\nsudo ambari-agent reset ${AMBARI_SERVER_HOST}  Now that we have the host rebuilt with the basics and an Ambari-Agent up and running, we should be able to see the host connected to Ambari via the Hosts Page.\nAt this point, you have a host that has been re-associated to Ambari successfully. In the host details section, you\u0026rsquo;ll notice how the host now identifies with version 7 of the OS. And at this point, the host will have none of the HDP libraries installed.\nWhile none of the HDP libraries are installed, you\u0026rsquo;ll notice that Ambari knows what services should be on the host. That\u0026rsquo;s because the host FQDN matches the previous OS version of the host and when the \u0026lsquo;ambari-agent\u0026rsquo; registered back with the \u0026lsquo;ambari-server\u0026rsquo;, the host assumed the former identity.\nThis host will also NOT have the previous system accounts for HDP, yet. IE: hdfs, yarn, hive, etc\u0026hellip;\nAmbari Server has a new feature, added in 2.6, that allows us to recover a host in this state. From the \u0026lsquo;host\u0026rsquo; window there\u0026rsquo;s a \u0026lsquo;Host Action\u0026rsquo; button in the upper right corner.\nSelect this and \u0026lsquo;Recover Host\u0026rsquo;. Ambari will reinstall and configure all the missing services on this host, as they were before.\nWe\u0026rsquo;re almost there, do NOT start the services yet!!! The remounted data directories that still contain all our data (that was the whole point of this exercise) need to be fixed. Most likely that the POSIX UID\u0026rsquo;s for the user and group assigned in the previous OS, do NOT match or even exist in the new OS. So the data drive permissions will not be properly configured. We need to fix this before starting the services.\nLocate each of the data directories and adjust (recursively) the ownership to match the new uid\u0026rsquo;s. For example: The NN data directory at /data/0/hadoop/hdfs/namenode. We need to ensure hdfs:hadoop owns the directory.\nchown -R hdfs:hadoop /data/0/hadoop/hdfs/namenode  Make these adjustments for each of the data directories on the host including, but not limited to: - Namenode - Secondary Namenode (when applicable) - Journal Node - ZooKeeper - ATS - Yarn (local and logs) - Datanode (Block Pools) - Log Directories (if these were on separate drives and survived the OS rebuild) - Pid Directories (if these were on separate drives and survived the OS rebuild)\nNow that we\u0026rsquo;ve fixed the permissions, we can restart the services on the host.\nValidate At this point, you should validate the services are operating as expected. The validation should be thorough to ensure the host is a healthy member of the cluster BEFORE proceeding on to the next host.\nSome known gotcha\u0026rsquo;s  Not all running jobs are tolerant to failed nodes. For example: a long running Spark task that dies because the host was removed, may not recover very well. In which case, the job may need to be restarted. When cycling through the master services, dropping a Hive Server 2 host will cause job failures for those connected to that host. If you consumers are using the ZooKeeper discovery protocol and you have multiple HiveServer2 instances, they\u0026rsquo;ll be routed to a working HiveServer2. Stagger the replacement of these HiveServer2 nodes to avoid chasing active connections down and killing them in short order. Some master services that aren\u0026rsquo;t HA will experience downtime as they go through this process. I suggest that the process be managed more carefully across the master nodes, opposed to the worker nodes. If you\u0026rsquo;re running LLAP, ensure the queue has enough room to support a missing host. LLAP daemons will attempt to restart, when a host is brought down and will need a place to go.  Automation Now that you\u0026rsquo;ve seen how this can be done, it\u0026rsquo;s time to automate this. Using your companies DevOps automation tools and practices, you should be able to cycle through a host upgrade every 15-30 minutes. You should be able to cycle through all the worker nodes in record time.\nWe briefly discussed a DevOps model to automate the OS rebuild. Another automation measure to consider is through Ambari.\nIf you have several hundred nodes to do this to, you\u0026rsquo;ll want to investigate the Ambari REST API and automate the actions we\u0026rsquo;ve performed through the Ambari UI.\n","date":1523923200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1523923200,"objectID":"4064855c6bc0f3765778dc27baf5f440","permalink":"http://blog.streever.com/post/2018/in-place-centos6-to-centos7-hdp/","publishdate":"2018-04-17T00:00:00Z","relpermalink":"/post/2018/in-place-centos6-to-centos7-hdp/","section":"post","summary":"Without a clean 'supported' process for upgrading CentOS/RHEL 6 to 7, migrating to CentOS/RHEL 7 on an existing HDP cluster is a challenge.  With a little planning this can be accomplished with minimal disruption to your running cluster.","tags":["hadoop","rhel","operating system","ambari","hdp"],"title":"RHEL/CentOS 6 to 7 in-place upgrades with HDP","type":"post"},{"authors":["David W. Streever"],"categories":["devops"],"content":"In a few other articles, I\u0026rsquo;ll talk about bringing hosts down to facilitate upgrades.\nIf you do this at rack at a time, it may also lead to data loss if any other drive in the system fails during the operation. That\u0026rsquo;s because the rules for replication when setting to 3 will place the second and third blocks on the same rack. The first block becomes the only viable source. If a drive fails, that contains this single block, the file will become corrupt. Restoring the data directories will fix the block issue, restoring the integrity of the file. But, jobs that depend on this file during the time it was corrupt/unavailable will fail.\nIf critical jobs can\u0026rsquo;t handle this risk, identify the supporting files/directories and increase the replication factor for the duration of the upgrade process to ensure you have adequate replicas available.\n","date":1523836800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1523836800,"objectID":"18c851cec1f4690ab981acf4660a38f2","permalink":"http://blog.streever.com/post/2018/its-your-last-block/","publishdate":"2018-04-16T00:00:00Z","relpermalink":"/post/2018/its-your-last-block/","section":"post","summary":"With 3 replicas when you remove 2 from service, data availability can be affected if you have a drive failure.","tags":["hdfs"],"title":"It's Your Last Block!","type":"post"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"aff5aa29b53e4d46eb5f150d332528a4","permalink":"http://blog.streever.com/post/hadoop-cli/scripting/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/post/hadoop-cli/scripting/","section":"post","summary":"","tags":null,"title":"","type":"post"}]